/**
 * Produce empty instances.
 *
 * @remark
 * "Emptory" is a portmanteau for "factory of empty instances".
 *
 * The empty instances do not necessarily pass the verification, but can be
 * structurally used in the program, since the types match, and can be
 * de/serialized.
 */

//
// WARNING: this code has been automatically generated by codegen.
//
// DO NOT edit or append.
//

import * as aas from "@aas-core-works/aas-core3.0rc02-typescript";

export function newExtension(): aas.types.Extension {
  return new aas.types.Extension("");
}

export function newAdministrativeInformation(): aas.types.AdministrativeInformation {
  return new aas.types.AdministrativeInformation();
}

export function newQualifier(): aas.types.Qualifier {
  return new aas.types.Qualifier("", aas.types.DataTypeDefXsd.AnyUri);
}

export function newAssetAdministrationShell(): aas.types.AssetAdministrationShell {
  return new aas.types.AssetAdministrationShell("", newAssetInformation());
}

export function newAssetInformation(): aas.types.AssetInformation {
  return new aas.types.AssetInformation(aas.types.AssetKind.Type);
}

export function newResource(): aas.types.Resource {
  return new aas.types.Resource("");
}

export function newSpecificAssetId(): aas.types.SpecificAssetId {
  return new aas.types.SpecificAssetId("", "", newReference());
}

export function newSubmodel(): aas.types.Submodel {
  return new aas.types.Submodel("");
}

export function newRelationshipElement(): aas.types.RelationshipElement {
  return new aas.types.RelationshipElement(newReference(), newReference());
}

export function newSubmodelElementList(): aas.types.SubmodelElementList {
  return new aas.types.SubmodelElementList(
    aas.types.AasSubmodelElements.AnnotatedRelationshipElement
  );
}

export function newSubmodelElementCollection(): aas.types.SubmodelElementCollection {
  return new aas.types.SubmodelElementCollection();
}

export function newProperty(): aas.types.Property {
  return new aas.types.Property(aas.types.DataTypeDefXsd.AnyUri);
}

export function newMultiLanguageProperty(): aas.types.MultiLanguageProperty {
  return new aas.types.MultiLanguageProperty();
}

export function newRange(): aas.types.Range {
  return new aas.types.Range(aas.types.DataTypeDefXsd.AnyUri);
}

export function newReferenceElement(): aas.types.ReferenceElement {
  return new aas.types.ReferenceElement();
}

export function newBlob(): aas.types.Blob {
  return new aas.types.Blob("");
}

export function newFile(): aas.types.File {
  return new aas.types.File("");
}

export function newAnnotatedRelationshipElement(): aas.types.AnnotatedRelationshipElement {
  return new aas.types.AnnotatedRelationshipElement(
    newReference(),
    newReference()
  );
}

export function newEntity(): aas.types.Entity {
  return new aas.types.Entity(aas.types.EntityType.CoManagedEntity);
}

export function newEventPayload(): aas.types.EventPayload {
  return new aas.types.EventPayload(newReference(), newReference(), "");
}

export function newBasicEventElement(): aas.types.BasicEventElement {
  return new aas.types.BasicEventElement(
    newReference(),
    aas.types.Direction.Input,
    aas.types.StateOfEvent.On
  );
}

export function newOperation(): aas.types.Operation {
  return new aas.types.Operation();
}

export function newOperationVariable(): aas.types.OperationVariable {
  return new aas.types.OperationVariable(newRelationshipElement());
}

export function newCapability(): aas.types.Capability {
  return new aas.types.Capability();
}

export function newConceptDescription(): aas.types.ConceptDescription {
  return new aas.types.ConceptDescription("");
}

export function newReference(): aas.types.Reference {
  return new aas.types.Reference(aas.types.ReferenceTypes.GlobalReference, []);
}

export function newKey(): aas.types.Key {
  return new aas.types.Key(aas.types.KeyTypes.FragmentReference, "");
}

export function newLangString(): aas.types.LangString {
  return new aas.types.LangString("", "");
}

export function newEnvironment(): aas.types.Environment {
  return new aas.types.Environment();
}

export function newEmbeddedDataSpecification(): aas.types.EmbeddedDataSpecification {
  return new aas.types.EmbeddedDataSpecification(
    newReference(),
    newDataSpecificationIec61360()
  );
}

export function newValueReferencePair(): aas.types.ValueReferencePair {
  return new aas.types.ValueReferencePair("", newReference());
}

export function newValueList(): aas.types.ValueList {
  return new aas.types.ValueList([]);
}

export function newDataSpecificationIec61360(): aas.types.DataSpecificationIec61360 {
  return new aas.types.DataSpecificationIec61360([]);
}

export function newDataSpecificationPhysicalUnit(): aas.types.DataSpecificationPhysicalUnit {
  return new aas.types.DataSpecificationPhysicalUnit("", "", []);
}
