//
// WARNING: this code has been automatically generated by codegen.
//
// DO NOT edit or append.
//

/**
 * Define a component with fields corresponding to properties of
 * {@link @aas-core-works/aas-core3.0rc02-typescript#types.Extension|Extension}.
 */

import * as aas from "@aas-core-works/aas-core3.0rc02-typescript";
import * as React from "react";

import * as fields from '../fields';
import * as newinstancing from '../../newinstancing.generated';
import * as help from './help.generated';

export function ExtensionFields(
  props: {
    snapInstance: Readonly<aas.types.Extension>,
    instance: aas.types.Extension,
  }
) {
  return (
    <>
      <fields.EmbeddedInstanceOptional<aas.types.Reference>
        label="Semantic id"
        helpUrl={
          `${help.ROOT_URL}/Extension.html#property-semantic_id`
        }
        snapInstance={
          props.snapInstance.semanticId
        }
        instance={
          props.instance.semanticId
        }
        newInstanceDefinitions={
          newinstancing.forReference(
            props.instance
          )
        }
        setInstance={
          (instance) => {
            props.instance.semanticId = instance;
          }
        }
      />

      <fields.ListFieldOptional<aas.types.Reference>
        label="Supplemental semantic ids"
        helpUrl={
          `${help.ROOT_URL}/Extension.html#property-supplemental_semantic_ids`
        }
        newInstanceDefinitions={
          newinstancing.forReference(
            props.instance
          )
        }
        snapItems={
          props.snapInstance.supplementalSemanticIds
        }
        items={
          props.instance.supplementalSemanticIds
        }
        setItems={
          (items) => {
            props.instance.supplementalSemanticIds = items;
          }
        }
      />

      <fields.TextFieldRequired
        label="Name"
        helpUrl={
          `${help.ROOT_URL}/Extension.html#property-name`
        }
        value={props.snapInstance.name}
        onChange={
          (value) => {
            props.instance.name = value;
          }
        }
      />

      <fields.EnumerationFieldOptional
        label="Value type"
        helpUrl={
          `${help.ROOT_URL}/Extension.html#property-value_type`
        }
        getLiterals={aas.types.overDataTypeDefXsd}
        literalToString={aas.stringification.mustDataTypeDefXsdToString}
        selected={props.snapInstance.valueType}
        onChange={
          (value) => {
            props.instance.valueType = value;
          }
        }
      />

      <fields.TextFieldOptional
        label="Value"
        helpUrl={
          `${help.ROOT_URL}/Extension.html#property-value`
        }
        value={props.snapInstance.value}
        onChange={
          (value) => {
            props.instance.value = value;
          }
        }
      />

      <fields.EmbeddedInstanceOptional<aas.types.Reference>
        label="Refers to"
        helpUrl={
          `${help.ROOT_URL}/Extension.html#property-refers_to`
        }
        snapInstance={
          props.snapInstance.refersTo
        }
        instance={
          props.instance.refersTo
        }
        newInstanceDefinitions={
          newinstancing.forReference(
            props.instance
          )
        }
        setInstance={
          (instance) => {
            props.instance.refersTo = instance;
          }
        }
      />
    </>
  )
}

//
// WARNING: this code has been automatically generated by codegen.
//
// DO NOT edit or append.
//
