//
// WARNING: this code has been automatically generated by codegen.
//
// DO NOT edit or append.
//

/**
 * Define a component with fields corresponding to properties of
 * {@link @aas-core-works/aas-core3.0rc02-typescript#types.Environment|Environment}.
 */

import * as aas from "@aas-core-works/aas-core3.0rc02-typescript";
import * as React from "react";

import * as fields from '../fields';
import * as help from './help.generated';
import * as newinstancing from '../../newinstancing.generated';

export function EnvironmentFields(
  props: {
    snapInstance: Readonly<aas.types.Environment>,
    instance: aas.types.Environment,
  }
) {
  return (
    <>
      <fields.ListFieldOptional<aas.types.AssetAdministrationShell>
        label="Asset administration shells"
        helpUrl={
          `${help.ROOT_URL}/Environment.html#property-asset_administration_shells`
        }
        parent={props.instance}
        property="assetAdministrationShells"
        newInstanceDefinitions={
          newinstancing.FOR_ASSET_ADMINISTRATION_SHELL
        }
        snapItems={
          props.snapInstance.assetAdministrationShells
        }
        items={
          props.instance.assetAdministrationShells
        }
        setItems={
          (items) => {
            props.instance.assetAdministrationShells = items;
          }
        }
      />

      <fields.ListFieldOptional<aas.types.Submodel>
        label="Submodels"
        helpUrl={
          `${help.ROOT_URL}/Environment.html#property-submodels`
        }
        parent={props.instance}
        property="submodels"
        newInstanceDefinitions={
          newinstancing.FOR_SUBMODEL
        }
        snapItems={
          props.snapInstance.submodels
        }
        items={
          props.instance.submodels
        }
        setItems={
          (items) => {
            props.instance.submodels = items;
          }
        }
      />

      <fields.ListFieldOptional<aas.types.ConceptDescription>
        label="Concept descriptions"
        helpUrl={
          `${help.ROOT_URL}/Environment.html#property-concept_descriptions`
        }
        parent={props.instance}
        property="conceptDescriptions"
        newInstanceDefinitions={
          newinstancing.FOR_CONCEPT_DESCRIPTION
        }
        snapItems={
          props.snapInstance.conceptDescriptions
        }
        items={
          props.instance.conceptDescriptions
        }
        setItems={
          (items) => {
            props.instance.conceptDescriptions = items;
          }
        }
      />
    </>
  )
}

//
// WARNING: this code has been automatically generated by codegen.
//
// DO NOT edit or append.
//
