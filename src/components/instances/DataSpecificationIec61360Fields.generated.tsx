//
// WARNING: this code has been automatically generated by codegen.
//
// DO NOT edit or append.
//

/**
 * Define a component with fields corresponding to properties of
 * {@link @aas-core-works/aas-core3.0rc02-typescript#types.DataSpecificationIec61360|DataSpecificationIec61360}.
 */

import * as aas from "@aas-core-works/aas-core3.0rc02-typescript";
import * as React from "react";

import * as fields from '../fields';
import * as newinstancing from '../../newinstancing.generated';
import * as help from './help.generated';

export function DataSpecificationIec61360Fields(
  props: {
    snapInstance: Readonly<aas.types.DataSpecificationIec61360>,
    instance: aas.types.DataSpecificationIec61360,
  }
) {
  return (
    <>
      <fields.ListFieldRequired<aas.types.LangString>
        label="Preferred name"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-preferred_name`
        }
        newInstanceDefinitions={
          newinstancing.forLangString(
            props.instance
          )
        }
        snapItems={
          props.snapInstance.preferredName
        }
        items={
          props.instance.preferredName
        }
        setItems={
          (items) => {
            props.instance.preferredName = items;
          }
        }
      />

      <fields.ListFieldOptional<aas.types.LangString>
        label="Short name"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-short_name`
        }
        newInstanceDefinitions={
          newinstancing.forLangString(
            props.instance
          )
        }
        snapItems={
          props.snapInstance.shortName
        }
        items={
          props.instance.shortName
        }
        setItems={
          (items) => {
            props.instance.shortName = items;
          }
        }
      />

      <fields.TextFieldOptional
        label="Unit"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-unit`
        }
        value={props.snapInstance.unit}
        onChange={
          (value) => {
            props.instance.unit = value;
          }
        }
      />

      <fields.EmbeddedInstanceOptional<aas.types.Reference>
        label="Unit id"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-unit_id`
        }
        snapInstance={
          props.snapInstance.unitId
        }
        instance={
          props.instance.unitId
        }
        newInstanceDefinitions={
          newinstancing.forReference(
            props.instance
          )
        }
        setInstance={
          (instance) => {
            props.instance.unitId = instance;
          }
        }
      />

      <fields.TextFieldOptional
        label="Source of definition"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-source_of_definition`
        }
        value={props.snapInstance.sourceOfDefinition}
        onChange={
          (value) => {
            props.instance.sourceOfDefinition = value;
          }
        }
      />

      <fields.TextFieldOptional
        label="Symbol"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-symbol`
        }
        value={props.snapInstance.symbol}
        onChange={
          (value) => {
            props.instance.symbol = value;
          }
        }
      />

      <fields.EnumerationFieldOptional
        label="Data type"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-data_type`
        }
        getLiterals={aas.types.overDataTypeIec61360}
        literalToString={aas.stringification.mustDataTypeIec61360ToString}
        selected={props.snapInstance.dataType}
        onChange={
          (value) => {
            props.instance.dataType = value;
          }
        }
      />

      <fields.ListFieldOptional<aas.types.LangString>
        label="Definition"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-definition`
        }
        newInstanceDefinitions={
          newinstancing.forLangString(
            props.instance
          )
        }
        snapItems={
          props.snapInstance.definition
        }
        items={
          props.instance.definition
        }
        setItems={
          (items) => {
            props.instance.definition = items;
          }
        }
      />

      <fields.TextFieldOptional
        label="Value format"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-value_format`
        }
        value={props.snapInstance.valueFormat}
        onChange={
          (value) => {
            props.instance.valueFormat = value;
          }
        }
      />

      <fields.EmbeddedInstanceOptional<aas.types.ValueList>
        label="Value list"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-value_list`
        }
        snapInstance={
          props.snapInstance.valueList
        }
        instance={
          props.instance.valueList
        }
        newInstanceDefinitions={
          newinstancing.forValueList(
            props.instance
          )
        }
        setInstance={
          (instance) => {
            props.instance.valueList = instance;
          }
        }
      />

      <fields.TextFieldOptional
        label="Value"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-value`
        }
        value={props.snapInstance.value}
        onChange={
          (value) => {
            props.instance.value = value;
          }
        }
      />

      <fields.EnumerationFieldOptional
        label="Level type"
        helpUrl={
          `${help.ROOT_URL}/Data_specification_IEC_61360.html#property-level_type`
        }
        getLiterals={aas.types.overLevelType}
        literalToString={aas.stringification.mustLevelTypeToString}
        selected={props.snapInstance.levelType}
        onChange={
          (value) => {
            props.instance.levelType = value;
          }
        }
      />
    </>
  )
}

//
// WARNING: this code has been automatically generated by codegen.
//
// DO NOT edit or append.
//
